[metadata]
name = monai
author = MONAI Consortium
author_email = monai.miccai2019@gmail.com
url = https://monai.io/
description = AI Toolkit for Healthcare Imaging
long_description = file:README.md
long_description_content_type = text/markdown; charset=UTF-8
platforms = OS Independent
license = Apache License 2.0

[options]
python_requires = >= 3.6
install_requires =
    torch>=1.4
    numpy>=1.17

[options.extras_require]
all =
    nibabel
    scikit-image>=0.14.2
    pillow
    tensorboard
    pytorch-ignite==0.3.0
nibabel =
    nibabel
skimage =
    scikit-image>=0.14.2
pillow =
    pillow
tensorboard =
    tensorboard
ignite =
    pytorch-ignite==0.3.0

[flake8]
select = B,C,E,F,N,P,T4,W,B9
max-line-length = 120
# C408 ignored because we like the dict keyword argument syntax
# E501 is not flexible enough, we're using B950 instead
ignore =
    E203,E305,E402,E501,E721,E741,F403,F405,F821,F841,F999,W503,W504,C408,E302,W291,E303,
    # these ignores are from flake8-bugbear; please fix!
    B007,B008,
    # these ignores are from flake8-comprehensions; please fix!
    C400,C401,C402,C403,C404,C405,C407,C411,C413,C414,C415,C416,
    # N812 lowercase 'torch.nn.functional' imported as non lowercase 'F'
    N812
    # suppress flake8-mypy failures occuring when MYPYPATH=${src_dir}/monai/monai
    T499
# --- Temporary disabling to allow smaller PRs
# Subsequent fixes necessary to make this tool pass are not yet
# merged into the master branch, but requested as separate
# commits.  Can not enable until all outstanding typehint
# PR's are approved
    T484
# Unused imports may be used later, disable warning while we
# separate many PR's
    F401
# ^^^^^^^^^ Temporary disabling to allow smaller PRs
per-file-ignores = __init__.py: F401
exclude = *.pyi,.git,monai/_version.py,versioneer.py,venv

[versioneer]
VCS = git
style = pep440
versionfile_source = monai/_version.py
versionfile_build = monai/_version.py
tag_prefix =
parentdir_prefix =

[mypy]
# --- Temporary disabling to allow smaller PRs
# Subsequent fixes necessary to make this tool pass are not yet
# merged into the master branch, but requested as separate
# commits.  Can not enable until all outstanding typehint
# PR's are approved
## Temporarily disable all mypy warnings
# --ignore_errors = True
# ^^^^^^ Temporary disabling to allow smaller PRs


# do not follow imports (except for ones found in typeshed)
follow_imports=normal

# suppress errors about unsatisfied imports
# The pytorch-ignite package is not type hinted and generates
# hundreds of failures that are not the priority to address
# at the monment.  Eventually ignore_missing_imports=False
# should be used add consistent typing information to
# those parts of the MONAI package that depend on ignite.
ignore_missing_imports=True
# Temporarily ignore all site packages too
# --no_site_packages=True

# allow returning Any as a consequence of the options above
warn_return_any=True

# ensure all execution paths are returning
warn_no_return=True

# lint-style cleanliness for typing needs to be disabled; returns more errors
# than the full run.
warn_redundant_casts=True
warn_unused_ignores=False


[mypy-torch.*]
# --- Temporary disabling to allow smaller PRs
# Subsequent fixes necessary to make this tool pass are not yet
# merged into the master branch, but requested as separate
# commits.  Can not enable until all outstanding typehint
# PR's are approved
## Temporarily disable all mypy warnings
ignore_errors = True
# ^^^^^^ Temporary disabling to allow smaller PRs
follow_imports = skip
follow_imports_for_stubs = True

[mypy-versioneer]
# Always ignore any type issues in the versioneer.py file
ignore_errors = True

[mypy-monai._version]
# Always ignore any type issues in the monai/._version.py file
ignore_errors = True

[mypy-monai.handlers.*]
# Always ignore any type issues in the monai/handlers files
ignore_errors = True

[mypy-monai.engines.*]
# Always ignore any type issues in the monai/engines files
ignore_errors = True

[pytype]
# NOTE: All relative paths are relative to the location of this file.
# Space-separated list of files or directories to exclude.
#  i.e. exclude = **/*_test.py **/test_*.py
exclude = **/versioneer.py _version.py monai/handlers monai/engines
# Space-separated list of files or directories to process.
inputs = monai
# Keep going past errors to analyze as many files as possible.
keep_going = True
# Run N jobs in parallel.
jobs = 8
# All pytype output goes here.
output = .pytype
# Paths to source code directories, separated by ':'.
pythonpath = .
# Python version (major.minor) of the target code.
# Do not set this! The python environment used for
#   evaluating the `pytype` process spawns a separate
#   subprocess for inspecting the code with the
#   `python{python_version}` executable which must
#   be configured to support testing MONAI.  Leaving
#   this unset uses the parent python version to
#   to spawn the testing environment the same as
#   the calling envirionment
# python_version = 3.X
# Experimental: Check variable values against their annotations.
check_variable_types = True
# Comma or space separated list of error names to ignore.
disable = pyi-error
# Report errors
report_errors = True
# Experimental: Infer precise return types even for invalid function calls.
precise_return = True
# Experimental: solve unknown types to label with structural types.
protocols = True
# Experimental: Only load submodules that are explicitly imported.
strict_import = False
