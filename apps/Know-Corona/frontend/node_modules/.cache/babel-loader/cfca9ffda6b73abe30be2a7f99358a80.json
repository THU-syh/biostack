{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahjo\\\\biostack\\\\apps\\\\Know-Corona\\\\frontend\\\\src\\\\QuestionView.tsx\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nconst useStyles = makeStyles({\n  title: {\n    marginTop: 40\n  },\n  card: {\n    marginTop: 20,\n    marginBottom: 20\n  }\n});\n\nconst QuestionView = ({\n  question\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, `${question.question}?`), question.results.map(result => {\n    const before = result.context.slice(0, result.start_index);\n    const answer = result.context.slice(result.start_index, result.end_index);\n    const after = result.context.slice(result.end_index, -1);\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.card,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      display: \"inline\",\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, before), /*#__PURE__*/React.createElement(Typography, {\n      display: \"inline\",\n      variant: \"body1\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, answer)), /*#__PURE__*/React.createElement(Typography, {\n      display: \"inline\",\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, after)));\n  }));\n};\n\nexport default QuestionView;","map":{"version":3,"sources":["C:/Users/mahjo/biostack/apps/Know-Corona/frontend/src/QuestionView.tsx"],"names":["React","Typography","Card","CardContent","makeStyles","useStyles","title","marginTop","card","marginBottom","QuestionView","question","classes","results","map","result","before","context","slice","start_index","answer","end_index","after"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAIA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC3BE,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN,GADoB;AAI3BC,EAAAA,IAAI,EAAE;AACJD,IAAAA,SAAS,EAAE,EADP;AAEJE,IAAAA,YAAY,EAAE;AAFV;AAJqB,CAAD,CAA5B;;AAUA,MAAMC,YAA8C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACvE,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEA,sBACE,uDACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEO,OAAO,CAACN,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAEK,QAAQ,CAACA,QAAS,GADxB,CADF,EAKGA,QAAQ,CAACE,OAAT,CAAiBC,GAAjB,CAAqBC,MAAM,IAAI;AAC9B,UAAMC,MAAM,GAAGD,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAqB,CAArB,EAAwBH,MAAM,CAACI,WAA/B,CAAf;AACA,UAAMC,MAAM,GAAGL,MAAM,CAACE,OAAP,CAAeC,KAAf,CACbH,MAAM,CAACI,WADM,EAEbJ,MAAM,CAACM,SAFM,CAAf;AAIA,UAAMC,KAAK,GAAGP,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAqBH,MAAM,CAACM,SAA5B,EAAuC,CAAC,CAAxC,CAAd;AAEA,wBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAET,OAAO,CAACJ,IAAzB;AAA+B,MAAA,OAAO,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAA6B,MAAA,OAAO,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,MADH,CADF,eAIE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAA6B,MAAA,OAAO,EAAC,OAArC;AAA6C,MAAA,KAAK,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAII,MAAJ,CADF,CAJF,eAOE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAA6B,MAAA,OAAO,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,KADH,CAPF,CADF,CADF;AAeD,GAvBA,CALH,CADF;AAgCD,CAnCD;;AAqCA,eAAeZ,YAAf","sourcesContent":["import React from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\"\r\n\r\nimport { Question } from \"./data/data\"\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    marginTop: 40\r\n  },\r\n  card: {\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n  }\r\n})\r\n\r\nconst QuestionView: React.FC<{ question: Question }> = ({ question }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" className={classes.title}>\r\n        {`${question.question}?`}\r\n      </Typography>\r\n\r\n      {question.results.map(result => {\r\n        const before = result.context.slice(0, result.start_index)\r\n        const answer = result.context.slice(\r\n          result.start_index,\r\n          result.end_index\r\n        )\r\n        const after = result.context.slice(result.end_index, -1)\r\n\r\n        return (\r\n          <Card className={classes.card} variant=\"outlined\">\r\n            <CardContent>\r\n              <Typography display=\"inline\" variant=\"body1\">\r\n                {before}\r\n              </Typography>\r\n              <Typography display=\"inline\" variant=\"body1\" color=\"primary\">\r\n                <b>{answer}</b>\r\n              </Typography>\r\n              <Typography display=\"inline\" variant=\"body1\">\r\n                {after}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default QuestionView\r\n"]},"metadata":{},"sourceType":"module"}