# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pml.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import penums_pb2
import pvisit_pb2
import pstat_pb2
import pn1_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='pml.proto',
  package='comphealth',
  serialized_pb=_b('\n\tpml.proto\x12\ncomphealth\x1a\x0cpenums.proto\x1a\x0cpvisit.proto\x1a\x0bpstat.proto\x1a\tpn1.proto\"\xe4\x01\n\rPDXCLASSIFIER\x12\x12\n\nindex_code\x18\x01 \x02(\t\x12\"\n\x08patients\x18\x02 \x02(\x0b\x32\x10.comphealth.PAGG\x12\x1e\n\x05index\x18\x03 \x02(\x0b\x32\x0f.comphealth.AGG\x12\x1c\n\x03sub\x18\x04 \x01(\x0b\x32\x0f.comphealth.AGG\x12\"\n\x06labels\x18\x05 \x03(\x0b\x32\x12.comphealth.Labels\x12*\n\nexclusions\x18\x06 \x03(\x0b\x32\x16.comphealth.Exclusions\x12\r\n\x05\x63ount\x18\x07 \x02(\x05\"\xc9\x01\n\x08NPRESULT\x12\"\n\x08patients\x18\x02 \x02(\x0b\x32\x10.comphealth.PAGG\x12\x1e\n\x05index\x18\x03 \x02(\x0b\x32\x0f.comphealth.AGG\x12\x1f\n\x06\x66uture\x18\x04 \x01(\x0b\x32\x0f.comphealth.AGG\x12 \n\x05query\x18\x06 \x03(\x0b\x32\x11.comphealth.QUERY\x12#\n\x06\x64\x65ltah\x18\x05 \x02(\x0b\x32\x13.comphealth.IntHist\x12\x11\n\tneighbors\x18\x07 \x02(\x05\"&\n\x06Labels\x12\r\n\x05\x63ount\x18\x01 \x02(\x05\x12\r\n\x05label\x18\x03 \x01(\t\"+\n\nExclusions\x12\r\n\x05\x63ount\x18\x01 \x02(\x05\x12\x0e\n\x06reason\x18\x03 \x01(\t\"&\n\x05QUERY\x12\x0e\n\x06weight\x18\x01 \x02(\x02\x12\r\n\x05\x66name\x18\x03 \x01(\t')
  ,
  dependencies=[penums_pb2.DESCRIPTOR,pvisit_pb2.DESCRIPTOR,pstat_pb2.DESCRIPTOR,pn1_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_PDXCLASSIFIER = _descriptor.Descriptor(
  name='PDXCLASSIFIER',
  full_name='comphealth.PDXCLASSIFIER',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index_code', full_name='comphealth.PDXCLASSIFIER.index_code', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='patients', full_name='comphealth.PDXCLASSIFIER.patients', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='index', full_name='comphealth.PDXCLASSIFIER.index', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sub', full_name='comphealth.PDXCLASSIFIER.sub', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labels', full_name='comphealth.PDXCLASSIFIER.labels', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exclusions', full_name='comphealth.PDXCLASSIFIER.exclusions', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='count', full_name='comphealth.PDXCLASSIFIER.count', index=6,
      number=7, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=78,
  serialized_end=306,
)


_NPRESULT = _descriptor.Descriptor(
  name='NPRESULT',
  full_name='comphealth.NPRESULT',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='patients', full_name='comphealth.NPRESULT.patients', index=0,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='index', full_name='comphealth.NPRESULT.index', index=1,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='future', full_name='comphealth.NPRESULT.future', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='query', full_name='comphealth.NPRESULT.query', index=3,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='deltah', full_name='comphealth.NPRESULT.deltah', index=4,
      number=5, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='neighbors', full_name='comphealth.NPRESULT.neighbors', index=5,
      number=7, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=309,
  serialized_end=510,
)


_LABELS = _descriptor.Descriptor(
  name='Labels',
  full_name='comphealth.Labels',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='comphealth.Labels.count', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='comphealth.Labels.label', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=512,
  serialized_end=550,
)


_EXCLUSIONS = _descriptor.Descriptor(
  name='Exclusions',
  full_name='comphealth.Exclusions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='comphealth.Exclusions.count', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reason', full_name='comphealth.Exclusions.reason', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=552,
  serialized_end=595,
)


_QUERY = _descriptor.Descriptor(
  name='QUERY',
  full_name='comphealth.QUERY',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='weight', full_name='comphealth.QUERY.weight', index=0,
      number=1, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fname', full_name='comphealth.QUERY.fname', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=597,
  serialized_end=635,
)

_PDXCLASSIFIER.fields_by_name['patients'].message_type = pstat_pb2._PAGG
_PDXCLASSIFIER.fields_by_name['index'].message_type = pstat_pb2._AGG
_PDXCLASSIFIER.fields_by_name['sub'].message_type = pstat_pb2._AGG
_PDXCLASSIFIER.fields_by_name['labels'].message_type = _LABELS
_PDXCLASSIFIER.fields_by_name['exclusions'].message_type = _EXCLUSIONS
_NPRESULT.fields_by_name['patients'].message_type = pstat_pb2._PAGG
_NPRESULT.fields_by_name['index'].message_type = pstat_pb2._AGG
_NPRESULT.fields_by_name['future'].message_type = pstat_pb2._AGG
_NPRESULT.fields_by_name['query'].message_type = _QUERY
_NPRESULT.fields_by_name['deltah'].message_type = pstat_pb2._INTHIST
DESCRIPTOR.message_types_by_name['PDXCLASSIFIER'] = _PDXCLASSIFIER
DESCRIPTOR.message_types_by_name['NPRESULT'] = _NPRESULT
DESCRIPTOR.message_types_by_name['Labels'] = _LABELS
DESCRIPTOR.message_types_by_name['Exclusions'] = _EXCLUSIONS
DESCRIPTOR.message_types_by_name['QUERY'] = _QUERY

PDXCLASSIFIER = _reflection.GeneratedProtocolMessageType('PDXCLASSIFIER', (_message.Message,), dict(
  DESCRIPTOR = _PDXCLASSIFIER,
  __module__ = 'pml_pb2'
  # @@protoc_insertion_point(class_scope:comphealth.PDXCLASSIFIER)
  ))
_sym_db.RegisterMessage(PDXCLASSIFIER)

NPRESULT = _reflection.GeneratedProtocolMessageType('NPRESULT', (_message.Message,), dict(
  DESCRIPTOR = _NPRESULT,
  __module__ = 'pml_pb2'
  # @@protoc_insertion_point(class_scope:comphealth.NPRESULT)
  ))
_sym_db.RegisterMessage(NPRESULT)

Labels = _reflection.GeneratedProtocolMessageType('Labels', (_message.Message,), dict(
  DESCRIPTOR = _LABELS,
  __module__ = 'pml_pb2'
  # @@protoc_insertion_point(class_scope:comphealth.Labels)
  ))
_sym_db.RegisterMessage(Labels)

Exclusions = _reflection.GeneratedProtocolMessageType('Exclusions', (_message.Message,), dict(
  DESCRIPTOR = _EXCLUSIONS,
  __module__ = 'pml_pb2'
  # @@protoc_insertion_point(class_scope:comphealth.Exclusions)
  ))
_sym_db.RegisterMessage(Exclusions)

QUERY = _reflection.GeneratedProtocolMessageType('QUERY', (_message.Message,), dict(
  DESCRIPTOR = _QUERY,
  __module__ = 'pml_pb2'
  # @@protoc_insertion_point(class_scope:comphealth.QUERY)
  ))
_sym_db.RegisterMessage(QUERY)


# @@protoc_insertion_point(module_scope)
